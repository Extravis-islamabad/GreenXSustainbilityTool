{"version":3,"file":"index.js","sources":["../src/dom/MutationRecord.ts","../src/dom/MutationObserver.ts"],"sourcesContent":["var MutationRecord = /** @class */ (function () {\n    function MutationRecord(type, target) {\n        this.type = type;\n        this.target = target;\n        this.addedNodes = [];\n        this.attributeName = null;\n        this.attributeNamespace = null;\n        this.nextSibling = null;\n        this.oldValue = null;\n        this.previousSibling = null;\n        this.removedNodes = [];\n    }\n    MutationRecord.copy = function (original) {\n        var record = new MutationRecord(original.type, original.target);\n        record.addedNodes = original.addedNodes.slice();\n        record.removedNodes = original.removedNodes.slice();\n        record.previousSibling = original.previousSibling;\n        record.nextSibling = original.nextSibling;\n        record.attributeName = original.attributeName;\n        record.attributeNamespace = original.attributeNamespace;\n        record.oldValue = original.oldValue;\n        return record;\n    };\n    return MutationRecord;\n}());\nexport { MutationRecord };\n//# sourceMappingURL=MutationRecord.js.map","import { ElementEvent, MutationEvent, runtime } from '@antv/g-lite';\nimport { MutationRecord } from './MutationRecord';\nvar uidCounter = 0;\nvar registrationsTable = new WeakMap();\nvar Registration = /** @class */ (function () {\n    function Registration(observer, target, options) {\n        this.observer = observer;\n        this.target = target;\n        this.options = options;\n        this.transientObservedNodes = [];\n    }\n    Registration.prototype.enqueue = function (record) {\n        var records = this.observer.records;\n        var length = records.length;\n        // There are cases where we replace the last record with the new record.\n        // For example if the record represents the same mutation we need to use\n        // the one with the oldValue. If we get same record (this can happen as we\n        // walk up the tree) we ignore the new record.\n        if (records.length > 0) {\n            var lastRecord = records[length - 1];\n            var recordToReplaceLast = selectRecord(lastRecord, record);\n            if (recordToReplaceLast) {\n                records[length - 1] = recordToReplaceLast;\n                return;\n            }\n        }\n        else {\n            scheduleCallback(this.observer);\n        }\n        records[length] = record;\n    };\n    Registration.prototype.addListeners = function () {\n        this.addListeners_(this.target);\n    };\n    Registration.prototype.addListeners_ = function (node) {\n        var options = this.options;\n        if (options.attributes)\n            node.addEventListener(ElementEvent.ATTR_MODIFIED, this, true);\n        // if (options.characterData) node.addEventListener('DOMCharacterDataModified', this, true);\n        if (options.childList)\n            node.addEventListener(ElementEvent.INSERTED, this, true);\n        if (options.childList || options.subtree)\n            node.addEventListener(ElementEvent.REMOVED, this, true);\n    };\n    Registration.prototype.removeListeners = function () {\n        this.removeListeners_(this.target);\n    };\n    Registration.prototype.removeListeners_ = function (node) {\n        var options = this.options;\n        if (options.attributes)\n            node.removeEventListener(ElementEvent.ATTR_MODIFIED, this, true);\n        // if (options.characterData) node.removeEventListener('DOMCharacterDataModified', this, true);\n        if (options.childList)\n            node.removeEventListener(ElementEvent.INSERTED, this, true);\n        if (options.childList || options.subtree)\n            node.removeEventListener(ElementEvent.REMOVED, this, true);\n    };\n    /**\n     * Adds a transient observer on node. The transient observer gets removed\n     * next time we deliver the change records.\n     */\n    // addTransientObserver(node: IElement) {\n    //   // Don't add transient observers on the target itself. We already have all\n    //   // the required listeners set up on the target.\n    //   if (node === this.target) return;\n    //   this.addListeners_(node);\n    //   this.transientObservedNodes.push(node);\n    //   let registrations = registrationsTable.get(node);\n    //   if (!registrations) registrationsTable.set(node, (registrations = []));\n    //   // We know that registrations does not contain this because we already\n    //   // checked if node === this.target.\n    //   registrations.push(this);\n    // }\n    Registration.prototype.removeTransientObservers = function () {\n        var transientObservedNodes = this.transientObservedNodes;\n        this.transientObservedNodes = [];\n        transientObservedNodes.forEach(function (node) {\n            // Transient observers are never added to the target.\n            this.removeListeners_(node);\n            var registrations = registrationsTable.get(node);\n            for (var i = 0; i < registrations.length; i++) {\n                if (registrations[i] === this) {\n                    registrations.splice(i, 1);\n                    // Each node can only have one registered observer associated with\n                    // this observer.\n                    break;\n                }\n            }\n        }, this);\n    };\n    Registration.prototype.handleEvent = function (e) {\n        // Stop propagation since we are managing the propagation manually.\n        // This means that other mutation events on the page will not work\n        // correctly but that is by design.\n        e.stopImmediatePropagation();\n        var record;\n        var target;\n        switch (e.type) {\n            case ElementEvent.ATTR_MODIFIED:\n                // http://dom.spec.whatwg.org/#concept-mo-queue-attributes\n                var name_1 = e.attrName;\n                // @ts-ignore\n                var namespace_1 = e.relatedNode.namespaceURI;\n                target = e.target;\n                // 1.\n                record = getRecord('attributes', target);\n                record.attributeName = name_1;\n                record.attributeNamespace = namespace_1;\n                // 2.\n                var oldValue_1 = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;\n                forEachAncestorAndObserverEnqueueRecord(target, function (options) {\n                    // 3.1, 4.2\n                    if (!options.attributes)\n                        return;\n                    // 3.2, 4.3\n                    if (options.attributeFilter &&\n                        options.attributeFilter.length &&\n                        options.attributeFilter.indexOf(name_1) === -1 &&\n                        options.attributeFilter.indexOf(namespace_1) === -1) {\n                        return;\n                    }\n                    // 3.3, 4.4\n                    if (options.attributeOldValue)\n                        return getRecordWithOldValue(oldValue_1);\n                    // 3.4, 4.5\n                    return record;\n                });\n                break;\n            // case 'DOMCharacterDataModified':\n            //   // http://dom.spec.whatwg.org/#concept-mo-queue-characterdata\n            //   var target = e.target;\n            //   // 1.\n            //   var record = getRecord('characterData', target);\n            //   // 2.\n            //   var oldValue = e.prevValue;\n            //   forEachAncestorAndObserverEnqueueRecord(target, function(options) {\n            //     // 3.1, 4.2\n            //     if (!options.characterData)\n            //       return;\n            //     // 3.2, 4.3\n            //     if (options.characterDataOldValue)\n            //       return getRecordWithOldValue(oldValue);\n            //     // 3.3, 4.4\n            //     return record;\n            //   });\n            //   break;\n            case ElementEvent.REMOVED:\n            // this.addTransientObserver(e.target as IElement);\n            // Fall through.\n            case ElementEvent.INSERTED:\n                // http://dom.spec.whatwg.org/#concept-mo-queue-childlist\n                target = e.relatedNode;\n                var changedNode = e.target;\n                var addedNodes = void 0;\n                var removedNodes = void 0;\n                if (e.type === ElementEvent.INSERTED) {\n                    addedNodes = [changedNode];\n                    removedNodes = [];\n                }\n                else {\n                    addedNodes = [];\n                    removedNodes = [changedNode];\n                }\n                var previousSibling = changedNode.previousSibling;\n                var nextSibling = changedNode.nextSibling;\n                // 1.\n                record = getRecord('childList', target);\n                record.addedNodes = addedNodes;\n                record.removedNodes = removedNodes;\n                record.previousSibling = previousSibling;\n                record.nextSibling = nextSibling;\n                forEachAncestorAndObserverEnqueueRecord(target, function (options) {\n                    // 2.1, 3.2\n                    if (!options.childList)\n                        return;\n                    // 2.2, 3.3\n                    return record;\n                });\n        }\n        clearRecords();\n    };\n    return Registration;\n}());\nexport { Registration };\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n * @see https://github.com/googlearchive/MutationObservers/blob/master/MutationObserver.js\n */\nvar MutationObserver = /** @class */ (function () {\n    function MutationObserver(callback) {\n        this.callback = callback;\n        this.nodes = [];\n        this.records = [];\n        this.uid = uidCounter++;\n    }\n    MutationObserver.prototype.observe = function (target, options) {\n        // 1.1\n        if ((!options.childList && !options.attributes && !options.characterData) ||\n            // 1.2\n            (options.attributeOldValue && !options.attributes) ||\n            // 1.3\n            (options.attributeFilter &&\n                options.attributeFilter.length &&\n                !options.attributes) ||\n            // 1.4\n            (options.characterDataOldValue && !options.characterData)) {\n            throw new SyntaxError();\n        }\n        var registrations = registrationsTable.get(target);\n        if (!registrations)\n            registrationsTable.set(target, (registrations = []));\n        // 2\n        // If target's list of registered observers already includes a registered\n        // observer associated with the context object, replace that registered\n        // observer's options with options.\n        var registration;\n        for (var i = 0; i < registrations.length; i++) {\n            if (registrations[i].observer === this) {\n                registration = registrations[i];\n                registration.removeListeners();\n                registration.options = options;\n                break;\n            }\n        }\n        // 3.\n        // Otherwise, add a new registered observer to target's list of registered\n        // observers with the context object as the observer and options as the\n        // options, and add target to context object's list of nodes on which it\n        // is registered.\n        if (!registration) {\n            registration = new Registration(this, target, options);\n            registrations.push(registration);\n            this.nodes.push(target);\n        }\n        registration.addListeners();\n    };\n    MutationObserver.prototype.disconnect = function () {\n        var _this = this;\n        this.nodes.forEach(function (node) {\n            var registrations = registrationsTable.get(node);\n            for (var i = 0; i < registrations.length; i++) {\n                var registration = registrations[i];\n                if (registration.observer === _this) {\n                    registration.removeListeners();\n                    registrations.splice(i, 1);\n                    // Each node can only have one registered observer associated with\n                    // this observer.\n                    break;\n                }\n            }\n        }, this);\n        this.records = [];\n    };\n    MutationObserver.prototype.takeRecords = function () {\n        var copyOfRecords = this.records;\n        this.records = [];\n        return copyOfRecords;\n    };\n    return MutationObserver;\n}());\nexport { MutationObserver };\n// We keep track of the two (possibly one) records used in a single mutation.\nvar currentRecord;\nvar recordWithOldValue;\n/**\n * Creates a record without |oldValue| and caches it as |currentRecord| for\n * later use.\n */\nfunction getRecord(type, target) {\n    return (currentRecord = new MutationRecord(type, target));\n}\n/**\n * Gets or creates a record with |oldValue| based in the |currentRecord|\n */\nfunction getRecordWithOldValue(oldValue) {\n    if (recordWithOldValue)\n        return recordWithOldValue;\n    recordWithOldValue = MutationRecord.copy(currentRecord);\n    recordWithOldValue.oldValue = oldValue;\n    return recordWithOldValue;\n}\nfunction clearRecords() {\n    currentRecord = recordWithOldValue = undefined;\n}\n/**\n * Whether the record represents a record from the current\n * mutation event.\n */\nfunction recordRepresentsCurrentMutation(record) {\n    return record === recordWithOldValue || record === currentRecord;\n}\n/**\n * Selects which record, if any, to replace the last record in the queue.\n * This returns |null| if no record should be replaced.\n */\nfunction selectRecord(lastRecord, newRecord) {\n    if (lastRecord === newRecord)\n        return lastRecord;\n    // Check if the the record we are adding represents the same record. If\n    // so, we keep the one with the oldValue in it.\n    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord))\n        return recordWithOldValue;\n    return null;\n}\nfunction removeTransientObserversFor(observer) {\n    observer.nodes.forEach(function (node) {\n        var registrations = registrationsTable.get(node);\n        if (!registrations)\n            return;\n        registrations.forEach(function (registration) {\n            if (registration.observer === observer)\n                registration.removeTransientObservers();\n        });\n    });\n}\n/**\n * This function is used for the \"For each registered observer observer (with\n * observer's options as options) in target's list of registered observers,\n * run these substeps:\" and the \"For each ancestor ancestor of target, and for\n * each registered observer observer (with options options) in ancestor's list\n * of registered observers, run these substeps:\" part of the algorithms. The\n * |options.subtree| is checked to ensure that the callback is called\n * correctly.\n *\n * @param {Node} target\n * @param {function(MutationObserverInit):MutationRecord} callback\n */\nfunction forEachAncestorAndObserverEnqueueRecord(target, callback) {\n    for (var node = target; node; node = node.parentNode) {\n        var registrations = registrationsTable.get(node);\n        if (registrations) {\n            for (var j = 0; j < registrations.length; j++) {\n                var registration = registrations[j];\n                var options = registration.options;\n                // Only target ignores subtree.\n                if (node !== target && !options.subtree)\n                    continue;\n                var record = callback(options);\n                if (record)\n                    registration.enqueue(record);\n            }\n        }\n    }\n}\n// This is used to ensure that we never schedule 2 callas to setImmediate\nvar isScheduled = false;\n// Keep track of observers that needs to be notified next time.\nvar scheduledObservers = [];\n/**\n * Schedules |dispatchCallback| to be called in the future.\n */\nfunction scheduleCallback(observer) {\n    scheduledObservers.push(observer);\n    if (!isScheduled) {\n        isScheduled = true;\n        // setImmediate(dispatchCallbacks);\n        if (typeof runtime.globalThis !== 'undefined') {\n            runtime.globalThis.setTimeout(dispatchCallbacks);\n        }\n        else {\n            dispatchCallbacks();\n        }\n    }\n}\nfunction dispatchCallbacks() {\n    // http://dom.spec.whatwg.org/#mutation-observers\n    isScheduled = false; // Used to allow a new setImmediate call above.\n    var observers = scheduledObservers;\n    scheduledObservers = [];\n    // Sort observers based on their creation UID (incremental).\n    observers.sort(function (o1, o2) {\n        return o1.uid - o2.uid;\n    });\n    var anyNonEmpty = false;\n    observers.forEach(function (observer) {\n        // 2.1, 2.2\n        var queue = observer.takeRecords();\n        // 2.3. Remove all transient registered observers whose observer is mo.\n        removeTransientObserversFor(observer);\n        // 2.4\n        if (queue.length) {\n            // @ts-ignore\n            observer.callback(queue, observer);\n            anyNonEmpty = true;\n        }\n    });\n    // 3.\n    if (anyNonEmpty)\n        dispatchCallbacks();\n}\n//# sourceMappingURL=MutationObserver.js.map"],"names":["ElementEvent","MutationEvent","runtime"],"mappings":"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"}