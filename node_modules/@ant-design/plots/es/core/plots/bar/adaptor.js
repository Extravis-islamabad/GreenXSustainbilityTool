var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { mark } from '../../components';
import { flow, transformOptions, get, isArray } from '../../utils';
/**
 * @param chart
 * @param options
 */
export function adaptor(params) {
    /**
     * @title 背景图
     * @description 通过新增 interval 实现
     */
    var background = function (params) {
        var options = params.options;
        var scale = options.scale, markBackground = options.markBackground, data = options.data, children = options.children;
        var domain = get(scale, 'y.domain', []);
        if (markBackground && domain.length && isArray(data)) {
            var domainMax_1 = 'domainMax';
            var backgroundData = data.map(function (item) {
                var _a;
                return __assign(__assign({}, item), (_a = {}, _a[domainMax_1] = domain[domain.length - 1], _a));
            });
            children.unshift(__assign({ type: 'interval', data: backgroundData, yField: domainMax_1, tooltip: false, legend: false, style: {
                    fill: '#eee',
                }, label: false }, markBackground));
        }
        return params;
    };
    return flow(background, transformOptions, mark)(params);
}
